-- apply changes
create table channel (
  id                            bigint generated by default as identity not null,
  display_name                  varchar(255),
  community_id                  bigint not null,
  constraint pk_channel primary key (id)
);

create table chat (
  id                            bigint generated by default as identity not null,
  message                       varchar(255),
  channel_id                    bigint not null,
  user_id                       bigint not null,
  constraint pk_chat primary key (id)
);

create table community (
  id                            bigint generated by default as identity not null,
  display_name                  varchar(255),
  owner_id                      bigint not null,
  constraint pk_community primary key (id)
);

create table members_users (
  community_id                  bigint not null,
  users_id                      bigint not null,
  constraint pk_members_users primary key (community_id,users_id)
);

create table invitation (
  id                            bigint generated by default as identity not null,
  token                         varchar(255),
  accepted                      boolean default false not null,
  community_id                  bigint not null,
  constraint pk_invitation primary key (id)
);

create table users (
  id                            bigint generated by default as identity not null,
  display_name                  varchar(255),
  email                         varchar(255),
  password                      varchar(255),
  user_signup_request_id        bigint,
  user_password_reset_request_id bigint,
  constraint uq_users_email unique (email),
  constraint uq_users_user_signup_request_id unique (user_signup_request_id),
  constraint uq_users_user_password_reset_request_id unique (user_password_reset_request_id),
  constraint pk_users primary key (id)
);

create table user_password_reset_request (
  id                            bigint generated by default as identity not null,
  token                         varchar(255),
  confirmed                     boolean default false not null,
  constraint pk_user_password_reset_request primary key (id)
);

create table user_sign_up_request (
  id                            bigint generated by default as identity not null,
  token                         varchar(255),
  confirmed                     boolean default false not null,
  constraint pk_user_sign_up_request primary key (id)
);

create index ix_channel_community_id on channel (community_id);
alter table channel add constraint fk_channel_community_id foreign key (community_id) references community (id) on delete restrict on update restrict;

create index ix_chat_channel_id on chat (channel_id);
alter table chat add constraint fk_chat_channel_id foreign key (channel_id) references channel (id) on delete restrict on update restrict;

create index ix_chat_user_id on chat (user_id);
alter table chat add constraint fk_chat_user_id foreign key (user_id) references users (id) on delete restrict on update restrict;

create index ix_community_owner_id on community (owner_id);
alter table community add constraint fk_community_owner_id foreign key (owner_id) references users (id) on delete restrict on update restrict;

create index ix_members_users_community on members_users (community_id);
alter table members_users add constraint fk_members_users_community foreign key (community_id) references community (id) on delete restrict on update restrict;

create index ix_members_users_users on members_users (users_id);
alter table members_users add constraint fk_members_users_users foreign key (users_id) references users (id) on delete restrict on update restrict;

create index ix_invitation_community_id on invitation (community_id);
alter table invitation add constraint fk_invitation_community_id foreign key (community_id) references community (id) on delete restrict on update restrict;

alter table users add constraint fk_users_user_signup_request_id foreign key (user_signup_request_id) references user_sign_up_request (id) on delete restrict on update restrict;

alter table users add constraint fk_users_user_password_reset_request_id foreign key (user_password_reset_request_id) references user_password_reset_request (id) on delete restrict on update restrict;

